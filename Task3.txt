  âœ…Task 3: Create a console application for basic CRUD operations on a list of tasks.

  âœ…Objective: Implement Create, Read, Update, and 
     Delete operations using arrays or 
     lists for data storage.

  âœ… Step:

  ðŸ”¹1.Define a Task class with necessary attributes.
    - This class represents each task.

      # task_manager.py

    class Task:
    def __init__(self, task_id, title, description):
        self.task_id = task_id
        self.title = title
        self.description = description

    def __str__(self):
        return f"ID: {self.task_id}, Title: {self.title}, Description: {self.description}"
 
   ðŸ“Œ Explanation:
     - __init__: constructor to create a task object.
     - __str__: makes printing a task easy and readable.

   ðŸ”¹2.Implement functionality to create a new task.
     - This function collects input and adds a new task to a list.
    
     def create_task(tasks, next_id):
     title = input("Enter task title: ")
     description = input("Enter task description: ")
     task = Task(next_id, title, description)
     tasks.append(task)
     print("Task created successfully.\n")
     return next_id + 1

  ðŸ“Œ Explanation:
   - tasks: list where all tasks are stored
   - next_id: auto-incrementing task ID.

  ðŸ”¹3.Develop a method to read and display tasks.
    - Display all tasks in the list.

    def read_tasks(tasks):
    if not tasks:
        print("No tasks available.\n")
    else:
        for task in tasks:
            print(task)
        print()

  ðŸ“Œ Explanation:
    - Loops through all tasks and prints them.

  ðŸ”¹4.Allow users to update task details.
    - Update an existing task by ID.

     def update_task(tasks):
     task_id = int(input("Enter the ID of the task to update: "))
     for task in tasks:
        if task.task_id == task_id:
            task.title = input("Enter new title: ")
            task.description = input("Enter new description: ")
            print("Task updated successfully.\n")
            return
     print("Task not found.\n")

  ðŸ“Œ Explanation:
    - Finds task by task_id, lets user change the title and description.

  ðŸ”¹5.Provide an option to delete tasks.
    - Remove a task by ID.
   
     def delete_task(tasks):
     task_id = int(input("Enter the ID of the task to delete: "))
     for task in tasks:
        if task.task_id == task_id:
            tasks.remove(task)
            print("Task deleted successfully.\n")
            return
      print("Task not found.\n")
    
   ðŸ“Œ Explanation:
    - Searches and removes task from the list.

   ðŸ”¹6.Test the application with various scenarios how to complete the task
     - Runs everything in a loop until the user exits.

      def main():
      tasks = []
      next_id = 1

       while True:
        print("==== Task Manager ====")
        print("1. Create Task")
        print("2. View Tasks")
        print("3. Update Task")
        print("4. Delete Task")
        print("5. Exit")
        choice = input("Enter your choice (1-5): ")

        if choice == '1':
            next_id = create_task(tasks, next_id)
        elif choice == '2':
            read_tasks(tasks)
        elif choice == '3':
            update_task(tasks)
        elif choice == '4':
            delete_task(tasks)
        elif choice == '5':
            print("Exiting Task Manager.")
            break
        else:
            print("Invalid choice. Please enter a number from 1 to 5.\n")

       if __name__ == "__main__":
       main()
     
    ðŸ“Œ Explanation:
      - Infinite loop shows menu.
      - Calls functions based on user input.
      - Gracefully exits when the user chooses 5.
   
    ðŸ§ª Test Case:
      1 Create task	Choose option 1	                        Adds a new task
      2 View tasks	Choose option 2	                        Lists all tasks
      3 Update task	Choose option 3,enter valid ID	        Edits task
      4 Delete task	Choose option 4,enter valid ID	        Removes task
      5 Wrong ID	Try to update/delete non-existing ID	Shows "Task not found"

     âœ…output:

     Python 3.13.5 (tags/v3.13.5:6cb20a2, Jun 11 2025, 16:15:46) [MSC v.1943 64 bit (AMD64)] on win32
     Enter "help" below or click "Help" above for more information.

     ===================== RESTART: C:/Users/HP/task_manager.py =====================
     ==== Task Manager ====
     1. Create Task
     2. View Tasks
     3. Update Task
     4. Delete Task
     5. Exit
     Enter your choice (1-5): 1
     Enter task title: 2
     Enter task description: 3
     Task created successfully.

    ==== Task Manager ====
    1. Create Task
    2. View Tasks
    3. Update Task
    4. Delete Task
    5. Exit
    Enter your choice (1-5): 4
    Enter the ID of the task to delete: 
